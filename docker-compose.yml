version: '3.8'

services:
  verba-aurea-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: verba-aurea-api
    ports:
      - "8000:8000"
    environment:
      # API配置
      - VERBA_APP_NAME=VerbaAurea Document Processing API
      - VERBA_APP_VERSION=1.0.0
      - VERBA_DEBUG=false
      - VERBA_LOG_LEVEL=INFO
      - VERBA_LOG_FORMAT=json
      
      # 文件处理配置
      - VERBA_MAX_FILE_SIZE=52428800  # 50MB
      - VERBA_UPLOAD_TEMP_DIR=/tmp/verba_aurea_uploads
      
      # 性能配置
      - VERBA_REQUEST_TIMEOUT=300
      - VERBA_MAX_CONCURRENT_REQUESTS=10
      
      # 安全配置
      - VERBA_CORS_ORIGINS=*
    volumes:
      # 挂载配置文件（可选）
      - ./config.json:/app/config.json:ro
      # 挂载日志目录（可选）
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - verba-network

  # Nginx反向代理（可选，用于生产环境）
  nginx:
    image: nginx:alpine
    container_name: verba-aurea-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # SSL证书目录
    depends_on:
      - verba-aurea-api
    restart: unless-stopped
    networks:
      - verba-network
    profiles:
      - production  # 只在production profile下启动

networks:
  verba-network:
    driver: bridge

# 开发环境快速启动命令：
# docker-compose up verba-aurea-api
#
# 生产环境启动命令（包含Nginx）：
# docker-compose --profile production up -d
